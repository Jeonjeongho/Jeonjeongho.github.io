/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

/*# sourceMappingURL=data:application/json;base64, *//*! scaffolding */
html {
  font-size: 10px;
  font-family: sans-serif;
}

body,
button,
code,
dd,
dl,
dt,
fieldset,
figure,
form,
h1,
h2,
h3,
h4,
h5,
h6,
legend,
li,
ol,
p,
pre,
table,
td,
th,
ul {
  margin: 0;
  padding: 0;
}

a {
  text-decoration: none;
}

img {
  vertical-align: middle;
}

ol,
ul {
  list-style: none;
}

address {
  font-style: normal;
}

hr {
  display: none;
}

abbr {
  cursor: help;
}

[role=button],
button {
  cursor: pointer;
}

html,
body {
  height: 100%;
}

fieldset {
  margin: 0;
  padding: 0;
  border: 0;
  min-width: 0;
}

legend {
  border: 0;
  background-color: transparent;
  color: transparent;
  font: 0/0 a;
  text-shadow: none;
}

body, html {
  margin: 0;
  padding: 0;
  font-family: 'Helvetica', 'Arial', sans-serif;
  color: #666;
  font-size: 12px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

body a, html a {
  color: #000;
}

body table, html table {
  width: 100%;
  table-layout: fixed;
  border-collapse: collapse;
}

body table caption, html table caption {
  display: none;
}

body .main, html .main {
  position: relative;
  width: 100%;
  height: 100%;
  min-width: 700px;
}

body .main-header, html .main-header {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  width: 300px;
  height: 100%;
  background: #000;
}

body .main-header h1, html .main-header h1 {
  padding: 90px 0 40px 20px;
}

body .main-header h1 a, html .main-header h1 a {
  color: #fff;
  font-size: 19px;
  font-weight: 300;
  line-height: 1.6;
}

body .main-header nav a, html .main-header nav a {
  display: block;
  color: #fff;
  padding: 0 20px;
  line-height: 40px;
  font-size: 16px;
}

body .main-content, html .main-content {
  padding-left: 300px;
}

body .main-content h2, html .main-content h2 {
  color: #000;
  margin-bottom: 20px;
}

body .main-content > section, html .main-content > section {
  padding: 15px;
}

body .main-content > section .contact-table table, html .main-content > section .contact-table table {
  width: 500px;
  border-top: 1px solid #dcdcdc;
}

body .main-content > section .contact-table table th, html .main-content > section .contact-table table th {
  border-left: 1px solid #dcdcdc;
  vertical-align: top;
  font-weight: normal;
}

body .main-content > section .contact-table table td li, html .main-content > section .contact-table table td li {
  margin-top: 10px;
}

body .main-content > section .contact-table table td li:first-child, html .main-content > section .contact-table table td li:first-child {
  margin-top: 0;
}

body .main-content > section .contact-table table td li span, html .main-content > section .contact-table table td li span {
  font-weight: bold;
}

body .main-content > section .contact-table table td li.through, html .main-content > section .contact-table table td li.through {
  text-decoration: line-through;
}

body .main-content > section .contact-table table th, body .main-content > section .contact-table table td, html .main-content > section .contact-table table th, html .main-content > section .contact-table table td {
  padding: 15px 10px;
  border-right: 1px solid #dcdcdc;
  border-bottom: 1px solid #dcdcdc;
}

body .main-content-1 .list, html .main-content-1 .list {
  margin: -10px 0 0 -10px;
}

body .main-content-1 .list:after, html .main-content-1 .list:after {
  display: block;
  clear: both;
  content: '';
}

body .main-content-1 .list li, html .main-content-1 .list li {
  float: left;
  margin: 10px;
}

body .main-content-1 .list li a, html .main-content-1 .list li a {
  display: block;
  position: relative;
  width: 280px;
  height: 280px;
  padding: 5px;
  border: 1px solid #dcdcdc;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

body .main-content-1 .list li a:hover img, html .main-content-1 .list li a:hover img {
  -webkit-transform: scale(1.15);
          transform: scale(1.15);
}

body .main-content-1 .list li a:hover .overlay_box, html .main-content-1 .list li a:hover .overlay_box {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.6;
}

body .main-content-1 .list li a:hover .arrow, html .main-content-1 .list li a:hover .arrow {
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
  opacity: 1;
}

body .main-content-1 .list li a .overlay_box, html .main-content-1 .list li a .overlay_box {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: #000;
  opacity: 0;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
}

body .main-content-1 .list li a .arrow, html .main-content-1 .list li a .arrow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
}

body .main-content-1 .list li a .arrow:after, body .main-content-1 .list li a .arrow:before, html .main-content-1 .list li a .arrow:after, html .main-content-1 .list li a .arrow:before {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  background: #fff;
  content: '';
}

body .main-content-1 .list li a .arrow:after, html .main-content-1 .list li a .arrow:after {
  width: 20px;
  height: 2px;
  margin: -1px 0 0 -10px;
}

body .main-content-1 .list li a .arrow:before, html .main-content-1 .list li a .arrow:before {
  width: 2px;
  height: 20px;
  margin: -10px 0 0 -1px;
}

body .main-content-1 .list li a figure, html .main-content-1 .list li a figure {
  display: block;
  overflow: hidden;
}

body .main-content-1 .list li a img, html .main-content-1 .list li a img {
  width: 100%;
  -webkit-transform: scale(1);
          transform: scale(1);
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
}

body .main-content-1 .list li a img + figcaption, html .main-content-1 .list li a img + figcaption {
  display: block;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  background: #fff;
  border-top: 1px solid #dcdcdc;
  padding: 10px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

body .main-content-1 .list li a img + figcaption span, html .main-content-1 .list li a img + figcaption span {
  display: block;
  margin-bottom: 8px;
  font-size: 13px;
}

body .main-content-1 .list li a img + figcaption p, html .main-content-1 .list li a img + figcaption p {
  display: block;
  height: 30px;
}

body .main-content-2:after, html .main-content-2:after {
  display: block;
  clear: both;
  content: '';
}

body .main-content-2 .contact-table, html .main-content-2 .contact-table {
  float: left;
}

body .main-content-2 .phone, html .main-content-2 .phone {
  float: left;
  margin: 0 0 0 50px;
}

body .main-content-2 .phone img, html .main-content-2 .phone img {
  width: 330px;
}

body .main-footer, html .main-footer {
  position: fixed;
  bottom: 10px;
  left: 20px;
  z-index: 10;
  color: #fff;
  font-size: 10px;
}

/*# sourceMappingURL=data:application/json;base64, */